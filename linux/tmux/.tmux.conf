set -g default-shell $SHELL

# make neovim happy
set -g focus-events on

# 24-bit color
#set -g default-terminal "screen-256color"
#set -sa terminal-overrides ",xterm-256color:RGB"
#set -g default-terminal "tmux-256color"
#set -ga terminal-overrides \",$TERM:Tc\"
set-option -ga terminal-overrides ",st-256color:Tc"
set -g default-terminal "tmux-256color"

# history
set -g history-limit 50000

# window numbers from 1, renumber if closed
set -g base-index 1
set -g renumber-windows on

# quick escape (for vim), faster key repetition
set -s escape-time 0

# show messages for 4 seconds instead
set -g display-time 4000

# fix copy/paste
set -g mouse on
setw -g mode-keys vi
# https://unix.stackexchange.com/questions/348913/copy-selection-to-a-clipboard-in-tmux
set -s set-clipboard off
# vi style
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -select clipboard -i'
# make enter behavior consistent
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -select clipboard -i'
# Copy on select
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -select clipboard -i'
# Middle click paste
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -select clipboard -o)\"; tmux paste-buffer"

# Drag to re-order windows
bind-key -n MouseDrag1Status swap-window -t=

# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window

set -g status-keys vi
set -g set-titles on
#set -g set-titles-string "#T - #(uptime | tr -d ',' | awk '{print \$(NF-2)}') - #(free -h | awk '/^Mem/ {print \$NF}')"
set -g set-titles-string "#T"

set -g bell-action any
set -g visual-bell off

# notifications
setw -g monitor-activity on
set -g visual-activity off
set -g visual-silence off

setw -g aggressive-resize on

# tomorrow night color scheme
set -g status-interval 1
set -g status-justify centre
set -g status-left ''
set -g status-right ''

# set -g status-justify left
# set -g status-left-length 20
# set -g status-right-length 140
# set -g status-left ''
# set -g status-right "#[bg=#383838,fg=#7CAFC2]#(tmux-mem-cpu-load --colors --interval 2) #[fg=#B8B8B8]%a %b %d %H:%M #[fg=#A1B56C]Batt:#(pmset -g batt|awk '/%/ {print $3}'|tr -d ';')"

# highlight active window
setw -g window-style 'bg=#263238'
#setw -g window-active-style 'bg=default'

# pane border and colors
set -g pane-border-style "bg=default,fg=#383838"
set -g pane-active-border-style "bg=default,fg=#86C1B9"

# message bar or "prompt"
set -g message-style "bg=#383838,fg=#E8E8E8"
set -g message-command-style "bg=#383838,fg=#E8E8E8"
set -g mode-style "bg=#383838,fg=#E8E8E8"

set -g status-style "bg=#383838"
setw -g window-status-style "bg=#383838,fg=#B8B8B8"
setw -g window-status-format '#[bg=,fg=#E0E0E0] #I #W #[default]'
setw -g window-status-current-style "bg=#455A64,fg=white"
setw -g window-status-current-format '#[bg=#424242,fg=#B0BEC5] #I #W #[default]'
setw -g window-status-activity-style "bg=#383838,fg=#AB4642"

# custom key bindings w/ alt/option as modifier
bind -n "M-/" copy-mode
bind -n "M-r" source-file ~/.tmux.conf \; display-message "Config reloaded..."
bind -n "M-m" setw synchronize-panes \; display-message "Toggled mirroring..."

bind -n "M-n" new-window -c "#{pane_current_path}"
bind -n "M-1" select-window -t :1
bind -n "M-2" select-window -t :2
bind -n "M-3" select-window -t :3
bind -n "M-4" select-window -t :4
bind -n "M-5" select-window -t :5
bind -n "M-6" select-window -t :6
bind -n "M-7" select-window -t :7
bind -n "M-8" select-window -t :8
bind -n "M-9" select-window -t :9
bind -n "M-0" select-window -t :0
bind -n "M-." select-window -n
bind -n "M-," select-window -p
bind -n "M-<" swap-window -t -1
bind -n "M->" swap-window -t +1
bind -n "M-X" confirm-before "kill-window"
bind -n "M--" split-window -v -c "#{pane_current_path}"
bind -n "M-\\" split-window -h -c "#{pane_current_path}"
bind -n "M-R" command-prompt -I "#W" "rename-window '%%'"

bind -n "M-f" resize-pane -Z
bind -n "M-h" select-pane -L
bind -n "M-l" select-pane -R
bind -n "M-k" select-pane -U
bind -n "M-j" select-pane -D
bind -n "M-Left" select-pane -L
bind -n "M-Right" select-pane -R
bind -n "M-Up" select-pane -U
bind -n "M-Down" select-pane -D
bind -n "M-H" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind -n "M-J" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind -n "M-K" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind -n "M-L" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
bind -n "M-S-Left" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind -n "M-S-Down" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind -n "M-S-Up" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind -n "M-S-Right" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
bind -n "M-x" confirm-before "kill-pane"
